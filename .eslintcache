[{"C:\\Users\\spark\\repos\\tiny-collector\\src\\index.js":"1","C:\\Users\\spark\\repos\\tiny-collector\\src\\App.js":"2","C:\\Users\\spark\\repos\\tiny-collector\\src\\reportWebVitals.js":"3","C:\\Users\\spark\\repos\\tiny-collector\\src\\components\\PlotGrid.js":"4"},{"size":542,"mtime":1607131471703,"results":"5","hashOfConfig":"6"},{"size":2272,"mtime":1607137897979,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1607122052900,"results":"8","hashOfConfig":"6"},{"size":835,"mtime":1607137599163,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1o1us3c",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\spark\\repos\\tiny-collector\\src\\index.js",[],["20","21"],"C:\\Users\\spark\\repos\\tiny-collector\\src\\App.js",["22"],"C:\\Users\\spark\\repos\\tiny-collector\\src\\reportWebVitals.js",[],"C:\\Users\\spark\\repos\\tiny-collector\\src\\components\\PlotGrid.js",["23","24"],"\r\nfunction PlotRow(props){\r\n  return (\r\n    <div className=\"ibws-fix\">\r\n    {\r\n      props.plots.map((plot, i)=>{\r\n\r\n        let theClass = \"hexagon \"+plot.content;\r\n        return (\r\n          <div key={\"key\"+i} className={theClass}>\r\n            <div className=\"hexagontent\">\r\n              {plot.content}\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction PlotGrid(rowSize, plots) {\r\n  // rowSize * rowSize should equal hexagons.length\r\n  // break hexagons into 2D grid\r\n  const plots2D = [];\r\n  while(plots.length) plots2D.push(plots.splice(0, rowSize));\r\n  return (\r\n    <div className=\"honeycomb\">\r\n      {plots2D.map((plots, i) => {\r\n        <div className=\"ibws-fix\">\r\n          <PlotRow plots={plots} />\r\n        </div>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlotRow;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":22,"column":10,"nodeType":"31","messageId":"32","endLine":22,"endColumn":18},{"ruleId":"34","severity":1,"message":"35","line":29,"column":31,"nodeType":"36","messageId":"37","endLine":29,"endColumn":33},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PlotGrid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]