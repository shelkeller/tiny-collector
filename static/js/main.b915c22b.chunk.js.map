{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["roll","max","Math","floor","random","HexGridDemo","hexagons","size","plots","times","id","dice","isFlower","name","generatePlots","gridWidth","gridHeight","hexProps","hexagon","fillOptions","fill","length","style","stroke","onClick","alert","renderHexagonContent","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,I,wDCOf,SAASA,EAAKC,GACZ,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAG/C,IAYMI,EAAc,WAClB,IAyBIC,EAtCgB,SAACC,GACrB,IAAIC,EAAQ,GASZ,OARAC,IAAMF,GAAM,SAAAG,GACR,IAAIC,EAAOX,EAAK,KAEdQ,EAAME,GADJC,GAAM,EACI,CAAED,GAAIA,EAAIE,UAAU,EAAMC,KAAM,UAEhC,CAACH,GAAIA,EAAIE,UAAU,EAAOC,KAAM,YAG3CL,EA4BQM,CAAc,KAE7B,OACE,cAAC,IAAD,CACAC,UAAW,IACXC,WAAY,IACZV,SAAUA,EACVW,SAhCkB,SAACC,GACnB,IAAIC,EAAc,CAAC,UAAW,UAAW,UAAW,WAChDC,EAAOD,EAAYnB,EAAKmB,EAAYE,SAIxC,OAHIH,EAAQN,WACVQ,EAAO,WAEF,CACLE,MAAO,CACLF,KAAMA,EACNG,OAAQ,QAEVC,QAAS,kBAAMC,MAAM,aAAD,OAAcP,EAAQR,GAAtB,yBAsBtBgB,qBAlB2B,SAACR,GAC5B,OACE,mCACCA,EAAQN,UACP,cAAC,IAAD,UAoCOe,MAjBf,WACE,OACE,mCACA,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,8BACA,cAAC,EAAD,MAEE,uDC1DOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b915c22b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport HexagonGrid from 'react-hexagon-grid';\r\nimport times from 'lodash/times';\r\nimport LocalFloristRounded from \"@material-ui/icons/LocalFloristRounded\";\r\n\r\n\r\nfunction roll(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nconst generatePlots = (size) => {\r\n  let plots = [];\r\n  times(size, id => {\r\n      let dice = roll(100);\r\n      if (dice<=3){\r\n        plots[id] = { id: id, isFlower: true, name: \"flower\"};\r\n      } else {\r\n        plots[id] = {id: id, isFlower: false, name: \"grass\"};\r\n      }\r\n  });\r\n  return plots;\r\n}\r\nconst HexGridDemo = () =>  {\r\n  const getHexProps = (hexagon) => {\r\n    let fillOptions = [\"#86d9b2\", \"#79c98c\", \"#a4dec6\", \"#abd69c\"]\r\n    let fill = fillOptions[roll(fillOptions.length)];\r\n    if (hexagon.isFlower){\r\n      fill = \"#bf5e69\";\r\n    }\r\n    return {\r\n      style: {\r\n        fill: fill,\r\n        stroke: 'none'\r\n      },\r\n      onClick: () => alert(`Hexagon n.${hexagon.id} has been clicked`)\r\n    };\r\n  }\r\n\r\n  const renderHexagonContent = (hexagon) => {\r\n    return (\r\n      <>\r\n      {hexagon.isFlower &&\r\n        <LocalFloristRounded/>\r\n      }\r\n      </>\r\n    );\r\n  }\r\n\r\n  let hexagons = generatePlots(102);\r\n\r\n  return (\r\n    <HexagonGrid\r\n    gridWidth={600}\r\n    gridHeight={600}\r\n    hexagons={hexagons}\r\n    hexProps={getHexProps}\r\n    renderHexagonContent={renderHexagonContent}\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <div>\r\n      <HexGridDemo />\r\n      </div>\r\n        <p>\r\n          TINY COLLECTOR\r\n        </p>\r\n      </header>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}